############# Print Tree
def printtree(root):
  ####edge cae
  if root==None:
    return
  print(root.data)
  #####if no child no execution of for loop so no base case reqd
  for child in root.children:  
    printtree(child)



def printtree(root):
  ####edge cae
  if root==None:
    return
  print(root.data,":",end="")
  for child in root.children:  
    printtree(child.data,",",end="")
   
   print()
  #####if no child no execution of for loop so no base case reqd
  for child in root.children:  
    printtree(child)

#################Taking input in Generic Tree
def takeTreeInput(root):
  print("Enter root data")
  rootdata=int(input())
  if rootdata == -1:
    return None
    
  root =  Treenode(rootdata)
  print("Enter no of children for ",rootdata)
  childcount = int(input())
  for i in range(childcount):
    child = taketreeinput()
    root.children.append(child)
  return root
  
  
  
  
  ############ No of nodes in generic tree
  
  def numnodes(root):
    count = 0
    ### Edge case when no root is  passed
    if root == None:
      return count
    count += 1
    for child in root.children:
      count += numnodes(child)
      
    return count 
  
  ############### Sum of all nodes
  
def sumofNodes(tree):
    sum = 0
    if tree == None:
        return sum
    
    sum += tree.data
    
    for child in tree.children:
        sum += sumofNodes(child)
    
    return sum
    
    
    
    
    
    ############ Node With Largest Data
    
    
